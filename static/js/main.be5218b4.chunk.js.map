{"version":3,"sources":["components/Header/index.jsx","components/TabsPanel/index.jsx","components/Result/index.jsx","components/SimpleInterest/index.jsx","utils/calculateSimpleInterest.js","components/CompoundInterest/index.jsx","utils/calculateCompoundInterest.js","components/Main/index.jsx","components/App/index.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","Header","classes","AppBar","role","className","position","Toolbar","Typography","variant","TabsPanel","tabStatus","setTabStatus","Paper","square","Tabs","value","onChange","event","newValue","indicatorColor","textColor","centered","Tab","label","tableCell","fontSize","Result","resultData","Table","aria-label","TableHead","TableRow","TableCell","colSpan","align","TableBody","map","i","key","name","hover","SimpleInterest","props","handleChange","e","setState","target","Number","handleSubmit","preventDefault","isCalculating","setTimeout","state","initialInvestment","interestRate","calculationPeriodType","calculationPeriod","P","r","t","toFixed","I","A","calculateSimpleInterest","scrollBottom","handleReset","isResetting","scrollTop","JSON","parse","localStorage","getItem","this","isFormFilled","setItem","stringify","noValidate","autoComplete","onSubmit","onReset","Grid","container","spacing","item","xs","TextField","input","id","type","disabled","select","MenuItem","Button","calcButton","color","size","CircularProgress","buttonProgress","thickness","resetButton","Component","withStyles","padding","width","marginBottom","breakpoints","up","marginRight","marginLeft","marginTop","CompoundInterest","compoundInterval","regularInvestment","n","PMT","Math","pow","calculateCompoundInterest","paper","margin","Main","useState","top","useRef","bottom","current","scrollIntoView","behavior","Container","ref","elevation","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.be5218b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar role=\"banner\" className={classes.root} position=\"fixed\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Interest Calculator\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst TabsPanel = ({ tabStatus, setTabStatus }) => {\r\n  const handleChange = (event, newValue) => {\r\n    setTabStatus(newValue);\r\n  };\r\n\r\n  return (\r\n    <nav role=\"navigation\">\r\n      <Paper square>\r\n        <Tabs\r\n          value={tabStatus}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n          variant=\"fullWidth\"\r\n        >\r\n          <Tab label=\"Simple Interest\" />\r\n          <Tab label=\"Compound Interest\" />\r\n        </Tabs>\r\n      </Paper>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default TabsPanel;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nconst useStyles = makeStyles({\r\n  tableCell: {\r\n    fontSize: 16\r\n  }\r\n});\r\n\r\nconst Result = ({ resultData }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Table aria-label=\"result\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell className={classes.tableCell} colSpan={2} align=\"center\">\r\n            RESULT\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {resultData.map(i => (\r\n          <TableRow key={i.name} hover>\r\n            <TableCell className={classes.tableCell}>{i.name} </TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">\r\n              {i.value}\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { calculateSimpleInterest } from '../../utils/calculateSimpleInterest';\r\nimport Result from '../Result';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    padding: 16\r\n  },\r\n  input: {\r\n    width: '100%'\r\n  },\r\n  calcButton: {\r\n    width: '100%',\r\n    marginBottom: 16,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '48%',\r\n      marginRight: 11,\r\n      marginBottom: 0\r\n    }\r\n  },\r\n  resetButton: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '48%',\r\n      marginLeft: 11\r\n    }\r\n  },\r\n  buttonProgress: {\r\n    position: 'absolute',\r\n    marginTop: 8,\r\n    marginLeft: -150\r\n  }\r\n});\r\n\r\nclass SimpleInterest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const data = JSON.parse(localStorage.getItem('simpleInterest'));\r\n\r\n    const {\r\n      initialInvestment,\r\n      interestRate,\r\n      calculationPeriod,\r\n      calculationPeriodType,\r\n      resultData\r\n    } = data || {\r\n      initialInvestment: '',\r\n      interestRate: '',\r\n      calculationPeriod: '',\r\n      calculationPeriodType: 1,\r\n      resultData: [\r\n        { name: 'Initial Investment', value: 0 },\r\n        { name: 'Interest Earned', value: 0 },\r\n        { name: 'Total', value: 0 }\r\n      ]\r\n    };\r\n\r\n    this.state = {\r\n      initialInvestment,\r\n      interestRate,\r\n      calculationPeriod,\r\n      calculationPeriodType,\r\n      isCalculating: false,\r\n      isResetting: false,\r\n      resultData\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: Number(e.target.value) });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ isCalculating: true });\r\n\r\n    setTimeout(() => {\r\n      const {\r\n        initialInvestment,\r\n        interestRate,\r\n        calculationPeriodType,\r\n        resultData\r\n      } = this.state;\r\n\r\n      let { calculationPeriod } = this.state;\r\n      calculationPeriod = calculationPeriod / calculationPeriodType / 1;\r\n\r\n      const { P, I, A } = calculateSimpleInterest(\r\n        initialInvestment,\r\n        interestRate,\r\n        calculationPeriod\r\n      );\r\n\r\n      resultData[0].value = P;\r\n      resultData[1].value = I;\r\n      resultData[2].value = A;\r\n\r\n      this.setState({ isCalculating: false, resultData });\r\n\r\n      this.props.scrollBottom();\r\n    }, 2000);\r\n  };\r\n\r\n  handleReset = e => {\r\n    this.setState({ isResetting: true });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        initialInvestment: '',\r\n        interestRate: '',\r\n        calculationPeriod: '',\r\n        calculationPeriodType: 1,\r\n        isCalculating: false,\r\n        isResetting: false,\r\n        resultData: [\r\n          { name: 'Initial Investment', value: 0 },\r\n          { name: 'Interest Earned', value: 0 },\r\n          { name: 'Total', value: 0 }\r\n        ]\r\n      });\r\n\r\n      this.props.scrollTop();\r\n    }, 2000);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      initialInvestment,\r\n      interestRate,\r\n      calculationPeriod,\r\n      calculationPeriodType,\r\n      isCalculating,\r\n      isResetting,\r\n      resultData\r\n    } = this.state;\r\n\r\n    const { classes } = this.props;\r\n    let isFormFilled = false;\r\n\r\n    if (initialInvestment && interestRate && calculationPeriod) {\r\n      isFormFilled = true;\r\n    }\r\n\r\n    localStorage.setItem(\r\n      'simpleInterest',\r\n      JSON.stringify({\r\n        initialInvestment,\r\n        interestRate,\r\n        calculationPeriod,\r\n        calculationPeriodType,\r\n        resultData\r\n      })\r\n    );\r\n\r\n    return (\r\n      <main role=\"main\">\r\n        <form\r\n          className={classes.root}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={this.handleSubmit}\r\n          onReset={this.handleReset}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                className={classes.input}\r\n                id=\"initial-investment\"\r\n                name=\"initialInvestment\"\r\n                label=\"Initial Investment\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={initialInvestment}\r\n                onChange={this.handleChange}\r\n                disabled={isCalculating || isResetting}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                className={classes.input}\r\n                id=\"interest-rate\"\r\n                name=\"interestRate\"\r\n                label=\"Yearly Interest Rate (%)\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={interestRate}\r\n                onChange={this.handleChange}\r\n                disabled={isCalculating || isResetting}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                className={classes.input}\r\n                id=\"calculation-period\"\r\n                name=\"calculationPeriod\"\r\n                label=\"Calculation Period\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={calculationPeriod}\r\n                onChange={this.handleChange}\r\n                disabled={isCalculating || isResetting}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                className={classes.input}\r\n                id=\"calculation-period-type\"\r\n                name=\"calculationPeriodType\"\r\n                variant=\"outlined\"\r\n                select\r\n                value={calculationPeriodType}\r\n                onChange={this.handleChange}\r\n                disabled={isCalculating || isResetting}\r\n              >\r\n                <MenuItem value={365}>Days</MenuItem>\r\n                <MenuItem value={12}>Months</MenuItem>\r\n                <MenuItem value={1}>Years</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                className={classes.calcButton}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                disabled={!isFormFilled || isCalculating}\r\n              >\r\n                Calculate\r\n              </Button>\r\n              {isCalculating && (\r\n                <CircularProgress\r\n                  className={classes.buttonProgress}\r\n                  thickness={4}\r\n                  size={28}\r\n                />\r\n              )}\r\n              <Button\r\n                className={classes.resetButton}\r\n                type=\"reset\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                disabled={!isFormFilled || isResetting}\r\n              >\r\n                Reset\r\n              </Button>\r\n              {isResetting && (\r\n                <CircularProgress\r\n                  className={classes.buttonProgress}\r\n                  thickness={4}\r\n                  size={28}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Result resultData={resultData} />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SimpleInterest);\r\n","const calculateSimpleInterest = (P, r, t) => {\r\n  P = Number(P.toFixed(2));\r\n  r = r / 100;\r\n\r\n  const I = Number((P * (1 + r * t) - P).toFixed(2));\r\n  const A = P + I;\r\n\r\n  return { P, I, A };\r\n};\r\n\r\nexport { calculateSimpleInterest };\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { calculateCompoundInterest } from '../../utils/calculateCompoundInterest';\r\nimport Result from '../Result';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    padding: 16\r\n  },\r\n  input: {\r\n    width: '100%'\r\n  },\r\n  calcButton: {\r\n    width: '100%',\r\n    marginBottom: 16,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '48%',\r\n      marginRight: 11,\r\n      marginBottom: 0\r\n    }\r\n  },\r\n  resetButton: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '48%',\r\n      marginLeft: 11\r\n    }\r\n  },\r\n  buttonProgress: {\r\n    position: 'absolute',\r\n    marginTop: 8,\r\n    marginLeft: -150\r\n  }\r\n});\r\n\r\nclass CompoundInterest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const data = JSON.parse(localStorage.getItem('compoundInterest'));\r\n\r\n    const {\r\n      initialInvestment,\r\n      interestRate,\r\n      calculationPeriod,\r\n      calculationPeriodType,\r\n      compoundInterval,\r\n      regularInvestment,\r\n      resultData\r\n    } = data || {\r\n      initialInvestment: '',\r\n      interestRate: '',\r\n      calculationPeriod: '',\r\n      calculationPeriodType: 1,\r\n      compoundInterval: 12,\r\n      regularInvestment: '',\r\n      resultData: [\r\n        { name: 'Initial Investment', value: 0 },\r\n        { name: 'Regular Investment', value: 0 },\r\n        { name: 'Interest Earned', value: 0 },\r\n        { name: 'Total', value: 0 }\r\n      ]\r\n    };\r\n\r\n    this.state = {\r\n      initialInvestment,\r\n      interestRate,\r\n      calculationPeriod,\r\n      calculationPeriodType,\r\n      compoundInterval,\r\n      regularInvestment,\r\n      isCalculating: false,\r\n      isResetting: false,\r\n      resultData\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: Number(e.target.value) });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ isCalculating: true });\r\n\r\n    setTimeout(() => {\r\n      const {\r\n        initialInvestment,\r\n        interestRate,\r\n        calculationPeriodType,\r\n        compoundInterval,\r\n        regularInvestment,\r\n        resultData\r\n      } = this.state;\r\n\r\n      let { calculationPeriod } = this.state;\r\n      calculationPeriod = calculationPeriod / calculationPeriodType / 1;\r\n\r\n      const { P, PMT, I, A } = calculateCompoundInterest(\r\n        initialInvestment,\r\n        interestRate,\r\n        calculationPeriod,\r\n        compoundInterval,\r\n        regularInvestment\r\n      );\r\n\r\n      resultData[0].value = P;\r\n      resultData[1].value = PMT;\r\n      resultData[2].value = I;\r\n      resultData[3].value = A;\r\n\r\n      this.setState({ isCalculating: false, resultData });\r\n\r\n      this.props.scrollBottom();\r\n    }, 2000);\r\n  };\r\n\r\n  handleReset = e => {\r\n    this.setState({ isResetting: true });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        initialInvestment: '',\r\n        interestRate: '',\r\n        calculationPeriod: '',\r\n        calculationPeriodType: 1,\r\n        compoundInterval: 12,\r\n        regularInvestment: '',\r\n        isCalculating: false,\r\n        isResetting: false,\r\n        resultData: [\r\n          { name: 'Initial Investment', value: 0 },\r\n          { name: 'Regular Investment', value: 0 },\r\n          { name: 'Interest Earned', value: 0 },\r\n          { name: 'Total', value: 0 }\r\n        ]\r\n      });\r\n\r\n      this.props.scrollTop();\r\n    }, 2000);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      initialInvestment,\r\n      interestRate,\r\n      calculationPeriod,\r\n      calculationPeriodType,\r\n      compoundInterval,\r\n      regularInvestment,\r\n      isCalculating,\r\n      isResetting,\r\n      resultData\r\n    } = this.state;\r\n\r\n    const { classes } = this.props;\r\n    let isFormFilled = false;\r\n\r\n    if (\r\n      initialInvestment &&\r\n      interestRate &&\r\n      calculationPeriod &&\r\n      compoundInterval\r\n    ) {\r\n      isFormFilled = true;\r\n    }\r\n\r\n    localStorage.setItem(\r\n      'compoundInterest',\r\n      JSON.stringify({\r\n        initialInvestment,\r\n        interestRate,\r\n        calculationPeriod,\r\n        calculationPeriodType,\r\n        compoundInterval,\r\n        regularInvestment,\r\n        resultData\r\n      })\r\n    );\r\n\r\n    return (\r\n      <main role=\"main\">\r\n        <form\r\n          className={classes.root}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={this.handleSubmit}\r\n          onReset={this.handleReset}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                className={classes.input}\r\n                id=\"initial-investment\"\r\n                name=\"initialInvestment\"\r\n                label=\"Initial Investment\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={initialInvestment}\r\n                onChange={this.handleChange}\r\n                disabled={isCalculating || isResetting}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                className={classes.input}\r\n                id=\"interest-rate\"\r\n                name=\"interestRate\"\r\n                label=\"Yearly Interest Rate (%)\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={interestRate}\r\n                onChange={this.handleChange}\r\n                disabled={isCalculating || isResetting}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                className={classes.input}\r\n                id=\"calculation-period\"\r\n                name=\"calculationPeriod\"\r\n                label=\"Calculation Period\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={calculationPeriod}\r\n                onChange={this.handleChange}\r\n                disabled={isCalculating || isResetting}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                className={classes.input}\r\n                id=\"calculation-period-type\"\r\n                name=\"calculationPeriodType\"\r\n                variant=\"outlined\"\r\n                select\r\n                value={calculationPeriodType}\r\n                onChange={this.handleChange}\r\n                disabled={isCalculating || isResetting}\r\n              >\r\n                <MenuItem value={365}>Days</MenuItem>\r\n                <MenuItem value={12}>Months</MenuItem>\r\n                <MenuItem value={1}>Years</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                className={classes.input}\r\n                id=\"compound-interval\"\r\n                name=\"compoundInterval\"\r\n                label=\"Compound Interval\"\r\n                variant=\"outlined\"\r\n                select\r\n                value={compoundInterval}\r\n                onChange={this.handleChange}\r\n                disabled={isCalculating || isResetting}\r\n              >\r\n                <MenuItem value={365}>Daily</MenuItem>\r\n                <MenuItem value={12}>Monthly</MenuItem>\r\n                <MenuItem value={4}>Quarterly</MenuItem>\r\n                <MenuItem value={2}>Half Yearly</MenuItem>\r\n                <MenuItem value={1}>Yearly</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                className={classes.input}\r\n                id=\"regular-investment\"\r\n                name=\"regularInvestment\"\r\n                label=\"Regular Monthly Investment (Optional)\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={regularInvestment}\r\n                onChange={this.handleChange}\r\n                disabled={isCalculating || isResetting}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                className={classes.calcButton}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                disabled={!isFormFilled || isCalculating}\r\n              >\r\n                Calculate\r\n              </Button>\r\n              {isCalculating && (\r\n                <CircularProgress\r\n                  className={classes.buttonProgress}\r\n                  thickness={4}\r\n                  size={28}\r\n                />\r\n              )}\r\n              <Button\r\n                className={classes.resetButton}\r\n                type=\"reset\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                disabled={!isFormFilled || isResetting}\r\n              >\r\n                Reset\r\n              </Button>\r\n              {isResetting && (\r\n                <CircularProgress\r\n                  className={classes.buttonProgress}\r\n                  thickness={4}\r\n                  size={28}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Result resultData={resultData} />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CompoundInterest);\r\n","const calculateCompoundInterest = (P, r, t, n, PMT) => {\r\n  P = Number(P.toFixed(2));\r\n  r = r / 100;\r\n  PMT = Number(Number(PMT).toFixed(2));\r\n\r\n  const A = Number(\r\n    (\r\n      P * Math.pow(1 + r / n, n * t) +\r\n      (PMT * (Math.pow(1 + r / n, n * t) - 1)) / (r / n)\r\n    ).toFixed(2)\r\n  );\r\n\r\n  PMT = Number((PMT * 12 * t).toFixed(2));\r\n  const I = Number((A - P - PMT).toFixed(2));\r\n\r\n  return { P, PMT, I, A };\r\n};\r\n\r\nexport { calculateCompoundInterest };\r\n","import React, { useState, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport TabsPanel from '../TabsPanel';\r\nimport SimpleInterest from '../SimpleInterest';\r\nimport CompoundInterest from '../CompoundInterest';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    marginTop: 80,\r\n    marginBottom: 20,\r\n    margin: 'auto',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst Main = () => {\r\n  const classes = useStyles();\r\n  const [tabStatus, setTabStatus] = useState(0);\r\n  const top = useRef();\r\n  const bottom = useRef();\r\n\r\n  const scrollTop = () => {\r\n    top.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const scrollBottom = () => {\r\n    bottom.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <div ref={top}></div>\r\n      <Paper elevation={2} className={classes.paper}>\r\n        <TabsPanel tabStatus={tabStatus} setTabStatus={setTabStatus} />\r\n        {tabStatus === 0 && (\r\n          <SimpleInterest scrollTop={scrollTop} scrollBottom={scrollBottom} />\r\n        )}\r\n        {tabStatus === 1 && (\r\n          <CompoundInterest scrollTop={scrollTop} scrollBottom={scrollBottom} />\r\n        )}\r\n      </Paper>\r\n      <div ref={bottom}></div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { Fragment } from 'react';\n\nimport Header from '../Header';\nimport Main from '../Main';\n\nconst App = () => {\n  return (\n    <Fragment>\n      <Header />\n      <Main />\n    </Fragment>\n  );\n};\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}